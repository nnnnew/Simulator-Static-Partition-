
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nnnnew
 */
public class MainFrame extends javax.swing.JFrame {

    
    public MainFrame() {
        initComponents();
        numberPartitionInMemory = new ArrayList<Integer>();
        modeAlgorithms = -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        algorithmChoices = new javax.swing.ButtonGroup();
        numberPartitionTextField = new javax.swing.JTextField();
        defineButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        partitionListView = new javax.swing.JList<>();
        addPartitionTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        bestFitAlgorChoice = new javax.swing.JRadioButton();
        firstFitAlgorButton = new javax.swing.JRadioButton();
        simulateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        processLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        worstFitButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        numberPartitionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberPartitionTextFieldActionPerformed(evt);
            }
        });

        defineButton.setText("DEFINE");
        defineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defineButtonActionPerformed(evt);
            }
        });

        partitionListView.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Partition: 0   Size: 0" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(partitionListView);

        addPartitionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPartitionTextFieldActionPerformed(evt);
            }
        });

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        algorithmChoices.add(bestFitAlgorChoice);
        bestFitAlgorChoice.setText("Best Fit Algorithm");
        bestFitAlgorChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bestFitAlgorChoiceActionPerformed(evt);
            }
        });

        algorithmChoices.add(firstFitAlgorButton);
        firstFitAlgorButton.setText("First Fit Algorithm");
        firstFitAlgorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstFitAlgorButtonActionPerformed(evt);
            }
        });

        simulateButton.setText("SIMULATE");
        simulateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulateButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("TH Sarabun New", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Static Partition Simulator");

        jLabel2.setText("Partition Number");

        jLabel3.setText("Add Partition Sector");

        processLabel.setText("no process.");

        jLabel4.setText("Algorithms");

        algorithmChoices.add(worstFitButton);
        worstFitButton.setText("Worst Fir Algorithm");
        worstFitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worstFitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bestFitAlgorChoice)
                            .addComponent(firstFitAlgorButton)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addPartitionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(numberPartitionTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(defineButton)
                                    .addComponent(addButton)))
                            .addComponent(processLabel)
                            .addComponent(jLabel4)
                            .addComponent(worstFitButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(simulateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberPartitionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(defineButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPartitionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addComponent(bestFitAlgorChoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstFitAlgorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(worstFitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(simulateButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(processLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numberPartitionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberPartitionTextFieldActionPerformed

    }//GEN-LAST:event_numberPartitionTextFieldActionPerformed

    private void defineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defineButtonActionPerformed
        int partition;
        try {
            partition = Integer.parseInt(numberPartitionTextField.getText().toString());
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, 
                    "Please input number");
            return;
        }
        if(partition < 3) {
            JOptionPane.showMessageDialog(null, 
                    "Please input nuber greater than 3");
        }
        else {
            partitionNumber = partition;
            String text = String.format("Created %d partition.", partitionNumber);
            processLabel.setText(text);
            DefaultListModel model = new DefaultListModel();
            model.addElement(String.format("Partition: %d   Size: 0", partitionNumber));
            partitionListView.setModel(model);
            numberPartitionInMemory.clear();
           
        }
        
    }//GEN-LAST:event_defineButtonActionPerformed

    private void addPartitionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPartitionTextFieldActionPerformed
        
    }//GEN-LAST:event_addPartitionTextFieldActionPerformed

    private void simulateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulateButtonActionPerformed
        if(modeAlgorithms == -1) {
            JOptionPane.showMessageDialog(null, 
                    "Please select algorithm to manage memory");
            return;
        }
        else if(partitionNumber == 0 || numberPartitionInMemory.size() == 0) {
            JOptionPane.showMessageDialog(null, 
                    "Please fill data");
            return;
        }
        else if(partitionNumber != numberPartitionInMemory.size()) {
            JOptionPane.showMessageDialog(null, 
                    "Your partition is " + numberPartitionInMemory.size() + "/" + partitionNumber);
            return;
        }
        dispose();
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                SimulatorFrame newFrame = new SimulatorFrame();
                newFrame.setPartitionNumber(partitionNumber);
                newFrame.setNumberPartitionInMemory(numberPartitionInMemory);
                newFrame.setModeAlgorithms(modeAlgorithms);
                newFrame.setSizeMemory(sizeMemory);
                newFrame.main(null);
            }
        });
        
    }//GEN-LAST:event_simulateButtonActionPerformed

    private void bestFitAlgorChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bestFitAlgorChoiceActionPerformed
        modeAlgorithms = 0;
    }//GEN-LAST:event_bestFitAlgorChoiceActionPerformed

    private void firstFitAlgorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstFitAlgorButtonActionPerformed
        modeAlgorithms = 1;
    }//GEN-LAST:event_firstFitAlgorButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int sizePartition;
        try {
            sizePartition = Integer.parseInt(addPartitionTextField.getText().toString());
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, 
                    "Please input number");
            return;
        }
        if(isInPartition(sizePartition)) {
            JOptionPane.showMessageDialog(null, 
                    "Invalid partition");
            return;
        }        
        if(sizePartition > 0) {
            if(numberPartitionInMemory.size() != partitionNumber) {
                numberPartitionInMemory.add(sizePartition);
                String text = String.format("Added segment %d size %d.", numberPartitionInMemory.size(), sizePartition);
                processLabel.setText(text);
                DefaultListModel model = new DefaultListModel();
                int size = sumSize(numberPartitionInMemory);
                sizeMemory = size;
                model.addElement(String.format("Partition: %d   Size: %d", partitionNumber, size));
                for(int i = 0; i < numberPartitionInMemory.size(); ++i) {
                    model.addElement(String.format("Segment: %d   Size: %d", i + 1, numberPartitionInMemory.get(i)));
                }
                partitionListView.setModel(model);
                
            }
            else {
                JOptionPane.showMessageDialog(null, 
                    "Partion is full");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, 
                    "Please input positive number");
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void worstFitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worstFitButtonActionPerformed
        modeAlgorithms = 2;
    }//GEN-LAST:event_worstFitButtonActionPerformed
    
    private boolean isInPartition(int size) {
        for(int i = 0; i < numberPartitionInMemory.size(); ++i) {
            if(numberPartitionInMemory.get(i) == size) {
                return true;
            }
        }
        return false;
    }   
    
    private int sumSize(ArrayList<Integer> list) {
        int sum = 0;
        for(int i = 0; i < list.size(); ++i) {
            sum += list.get(i);
        }
        return sum;
    }
    
    /**
     * @param args the command line arguments
     */
    
    private int partitionNumber;
    private int modeAlgorithms;
    private int sizeMemory;
    private ArrayList<Integer> numberPartitionInMemory;
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addPartitionTextField;
    private javax.swing.ButtonGroup algorithmChoices;
    private javax.swing.JRadioButton bestFitAlgorChoice;
    private javax.swing.JButton defineButton;
    private javax.swing.JRadioButton firstFitAlgorButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numberPartitionTextField;
    private javax.swing.JList<String> partitionListView;
    private javax.swing.JLabel processLabel;
    private javax.swing.JButton simulateButton;
    private javax.swing.JRadioButton worstFitButton;
    // End of variables declaration//GEN-END:variables
}
